{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../core/services/policy.service\";\nexport class ModifierPolicyComponent {\n  constructor(formBuilder, route, policyService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.policyService = policyService;\n  }\n  ngOnInit() {\n    this.policyForm = this.formBuilder.group({\n      idPolicy: [''],\n      nom: ['', Validators.required],\n      rules: ['', Validators.required]\n    });\n    this.route.params.subscribe(params => {\n      const idPolicy = +params['id'];\n      this.loadPolicyData(idPolicy);\n    });\n  }\n  loadPolicyData(idPolicy) {\n    this.policyService.getPolicyById(idPolicy).subscribe(policy => {\n      this.policyForm.patchValue({\n        idPolicy: policy.idPolicy,\n        nom: policy.nom,\n        rules: policy.rules\n      });\n    });\n  }\n  onSubmit() {\n    if (this.policyForm.valid) {\n      const updatedPolicy = this.policyForm.value;\n      this.policyService.updatePolicy(updatedPolicy).subscribe(response => {\n        console.log('Politique mise à jour avec succès:', response);\n        // Afficher un message de réussite ou rediriger l'utilisateur vers une autre page, etc.\n      }, error => {\n        console.error('Erreur lors de la mise à jour de la politique:', error);\n        // Gérer l'erreur, afficher un message d'erreur à l'utilisateur, etc.\n      });\n    } else {\n      console.error('Le formulaire n\\'est pas valide.');\n      // Afficher un message d'erreur à l'utilisateur pour lui indiquer qu'il doit remplir correctement le formulaire.\n    }\n  }\n  static #_ = this.ɵfac = function ModifierPolicyComponent_Factory(t) {\n    return new (t || ModifierPolicyComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.PolicyService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifierPolicyComponent,\n    selectors: [[\"app-modifier-policy\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 22,\n    vars: 2,\n    consts: [[1, \"container\", \"mt-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\", \"text-center\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"nom\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"nom\", \"formControlName\", \"nom\", \"placeholder\", \"Entrez le nom de la politique\", 1, \"form-control\"], [\"for\", \"rules\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"rules\", \"formControlName\", \"rules\", \"placeholder\", \"D\\u00E9crivez les r\\u00E8gles\", 1, \"form-control\"], [1, \"d-grid\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\"]],\n    template: function ModifierPolicyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\");\n        i0.ɵɵtext(6, \"Modifier la politique\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function ModifierPolicyComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Nom\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\", 10);\n        i0.ɵɵtext(15, \"R\\u00E8gles\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 12)(18, \"button\", 13);\n        i0.ɵɵtext(19, \"Mettre \\u00E0 jour la politique\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 14);\n        i0.ɵɵtext(21, \"Annuler\");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.policyForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"disabled\", !ctx.policyForm.valid);\n      }\n    },\n    dependencies: [CommonModule, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","ReactiveFormsModule","CommonModule","ModifierPolicyComponent","constructor","formBuilder","route","policyService","ngOnInit","policyForm","group","idPolicy","nom","required","rules","params","subscribe","loadPolicyData","getPolicyById","policy","patchValue","onSubmit","valid","updatedPolicy","value","updatePolicy","response","console","log","error","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","i3","PolicyService","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ModifierPolicyComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ModifierPolicyComponent_Template_form_ngSubmit_8_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["C:\\PIDataCatalogDREAMIT\\FrontMetaData\\src\\app\\modifier-policy\\modifier-policy.component.ts","C:\\PIDataCatalogDREAMIT\\FrontMetaData\\src\\app\\modifier-policy\\modifier-policy.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PolicyService } from '../core/services/policy.service';\r\nimport {   ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n@Component({\r\n  selector: 'app-modifier-policy',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './modifier-policy.component.html',\r\n  styleUrls: ['./modifier-policy.component.scss']\r\n})\r\nexport class ModifierPolicyComponent implements OnInit {\r\n  policyForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private policyService: PolicyService\r\n  ) {}\r\n  \r\n  ngOnInit(): void {\r\n    this.policyForm = this.formBuilder.group({\r\n      idPolicy: [''],\r\n      nom: ['', Validators.required],\r\n      rules: ['', Validators.required]\r\n    });\r\n\r\n    this.route.params.subscribe(params => {\r\n      const idPolicy = +params['id'];\r\n      this.loadPolicyData(idPolicy);\r\n    });\r\n  }\r\n  \r\n  loadPolicyData(idPolicy: number): void {\r\n    this.policyService.getPolicyById(idPolicy).subscribe((policy) => {\r\n      this.policyForm.patchValue({\r\n        idPolicy: policy.idPolicy,\r\n        nom: policy.nom,\r\n        rules: policy.rules\r\n      });\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.policyForm.valid) {\r\n      const updatedPolicy = this.policyForm.value;\r\n      this.policyService.updatePolicy(updatedPolicy).subscribe(\r\n        (response) => {\r\n          console.log('Politique mise à jour avec succès:', response);\r\n          // Afficher un message de réussite ou rediriger l'utilisateur vers une autre page, etc.\r\n        },\r\n        (error) => {\r\n          console.error('Erreur lors de la mise à jour de la politique:', error);\r\n          // Gérer l'erreur, afficher un message d'erreur à l'utilisateur, etc.\r\n        }\r\n      );\r\n    } else {\r\n      console.error('Le formulaire n\\'est pas valide.');\r\n      // Afficher un message d'erreur à l'utilisateur pour lui indiquer qu'il doit remplir correctement le formulaire.\r\n    }\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-md-6\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header text-center\">\r\n          <h2>Modifier la politique</h2>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <form [formGroup]=\"policyForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"nom\" class=\"form-label\">Nom</label>\r\n              <input type=\"text\" id=\"nom\" formControlName=\"nom\" class=\"form-control\" placeholder=\"Entrez le nom de la politique\">\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"rules\" class=\"form-label\">Règles</label>\r\n              <input type=\"text\" id=\"rules\" formControlName=\"rules\" class=\"form-control\" placeholder=\"Décrivez les règles\">\r\n            </div>\r\n            <div class=\"d-grid gap-2\">\r\n              <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!policyForm.valid\">Mettre à jour la politique</button>\r\n              <button type=\"button\" class=\"btn btn-secondary\" >Annuler</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}