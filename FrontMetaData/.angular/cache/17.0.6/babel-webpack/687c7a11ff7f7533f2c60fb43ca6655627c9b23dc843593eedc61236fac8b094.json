{"ast":null,"code":"import { getFirebaseBackend } from '../../authUtils';\nimport * as i0 from \"@angular/core\";\nexport class AuthenticationService {\n  constructor() {}\n  /**\n   * Returns the current user\n   */\n  currentUser() {\n    return getFirebaseBackend().getAuthenticatedUser();\n  }\n  /**\n   * Performs the auth\n   * @param email email of user\n   * @param password password of user\n   */\n  login(email, password) {\n    return getFirebaseBackend().loginUser(email, password).then(response => {\n      const user = response;\n      return user;\n    });\n  }\n  /**\n   * Performs the register\n   * @param email email\n   * @param password password\n   */\n  register(email, password) {\n    return getFirebaseBackend().registerUser(email, password).then(response => {\n      const user = response;\n      return user;\n    });\n  }\n  /**\n   * Reset password\n   * @param email email\n   */\n  resetPassword(email) {\n    return getFirebaseBackend().forgetPassword(email).then(response => {\n      const message = response.data;\n      return message;\n    });\n  }\n  /**\n   * Logout the user\n   */\n  logout() {\n    // logout the user\n    getFirebaseBackend().logout();\n  }\n  static #_ = this.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["getFirebaseBackend","AuthenticationService","constructor","currentUser","getAuthenticatedUser","login","email","password","loginUser","then","response","user","register","registerUser","resetPassword","forgetPassword","message","data","logout","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\PIDataCatalogDREAMIT\\FrontMetaData\\src\\app\\core\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { getFirebaseBackend } from '../../authUtils';\n\nimport { User } from '../models/auth.models';\n\n@Injectable({ providedIn: 'root' })\n\nexport class AuthenticationService {\n\n    user: User;\n\n    constructor() {\n    }\n\n    /**\n     * Returns the current user\n     */\n    public currentUser(): User {\n        return getFirebaseBackend().getAuthenticatedUser();\n    }\n\n    /**\n     * Performs the auth\n     * @param email email of user\n     * @param password password of user\n     */\n    login(email: string, password: string) {\n        return getFirebaseBackend().loginUser(email, password).then((response: any) => {\n            const user = response;\n            return user;\n        });\n    }\n\n    /**\n     * Performs the register\n     * @param email email\n     * @param password password\n     */\n    register(email: string, password: string) {\n        return getFirebaseBackend().registerUser(email, password).then((response: any) => {\n            const user = response;\n            return user;\n        });\n    }\n\n    /**\n     * Reset password\n     * @param email email\n     */\n    resetPassword(email: string) {\n        return getFirebaseBackend().forgetPassword(email).then((response: any) => {\n            const message = response.data;\n            return message;\n        });\n    }\n\n    /**\n     * Logout the user\n     */\n    logout() {\n        // logout the user\n        getFirebaseBackend().logout();\n    }\n}\n\n"],"mappings":"AAEA,SAASA,kBAAkB,QAAQ,iBAAiB;;AAMpD,OAAM,MAAOC,qBAAqB;EAI9BC,YAAA,GACA;EAEA;;;EAGOC,WAAWA,CAAA;IACd,OAAOH,kBAAkB,EAAE,CAACI,oBAAoB,EAAE;EACtD;EAEA;;;;;EAKAC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACjC,OAAOP,kBAAkB,EAAE,CAACQ,SAAS,CAACF,KAAK,EAAEC,QAAQ,CAAC,CAACE,IAAI,CAAEC,QAAa,IAAI;MAC1E,MAAMC,IAAI,GAAGD,QAAQ;MACrB,OAAOC,IAAI;IACf,CAAC,CAAC;EACN;EAEA;;;;;EAKAC,QAAQA,CAACN,KAAa,EAAEC,QAAgB;IACpC,OAAOP,kBAAkB,EAAE,CAACa,YAAY,CAACP,KAAK,EAAEC,QAAQ,CAAC,CAACE,IAAI,CAAEC,QAAa,IAAI;MAC7E,MAAMC,IAAI,GAAGD,QAAQ;MACrB,OAAOC,IAAI;IACf,CAAC,CAAC;EACN;EAEA;;;;EAIAG,aAAaA,CAACR,KAAa;IACvB,OAAON,kBAAkB,EAAE,CAACe,cAAc,CAACT,KAAK,CAAC,CAACG,IAAI,CAAEC,QAAa,IAAI;MACrE,MAAMM,OAAO,GAAGN,QAAQ,CAACO,IAAI;MAC7B,OAAOD,OAAO;IAClB,CAAC,CAAC;EACN;EAEA;;;EAGAE,MAAMA,CAAA;IACF;IACAlB,kBAAkB,EAAE,CAACkB,MAAM,EAAE;EACjC;EAAC,QAAAC,CAAA,G;qBAvDQlB,qBAAqB;EAAA;EAAA,QAAAmB,EAAA,G;WAArBnB,qBAAqB;IAAAoB,OAAA,EAArBpB,qBAAqB,CAAAqB,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}