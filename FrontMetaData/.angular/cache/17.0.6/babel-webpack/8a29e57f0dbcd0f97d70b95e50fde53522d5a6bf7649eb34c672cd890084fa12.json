{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../core/services/documentation.service\";\nimport * as i3 from \"@angular/common\";\nfunction ModifierDocumentationComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ModifierDocumentationComponent_div_0_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const document_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.editDocument(document_r2));\n    });\n    i0.ɵɵtext(6, \"Modifier\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const document_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(document_r2.nom);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(document_r2.description);\n  }\n}\nfunction ModifierDocumentationComponent_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function ModifierDocumentationComponent_form_1_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.saveChanges());\n    });\n    i0.ɵɵelement(1, \"input\", 4)(2, \"input\", 5);\n    i0.ɵɵelementStart(3, \"button\", 6);\n    i0.ɵɵtext(4, \"Enregistrer\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.documentationForm);\n  }\n}\nexport class ModifierDocumentationComponent {\n  constructor(formBuilder, documentationService) {\n    this.formBuilder = formBuilder;\n    this.documentationService = documentationService;\n    this.editing = false; // Indicateur de mode édition\n  }\n\n  ngOnInit() {\n    // Initialisation du formulaire\n    this.documentationForm = this.formBuilder.group({\n      nom: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n    // Récupération des documents depuis le service\n    this.documentationService.getAllDocuments().subscribe(data => {\n      this.documents = data;\n    }, error => {\n      console.error('Erreur lors de la récupération des documents:', error);\n    });\n  }\n  // Méthode pour activer le mode édition\n  editDocument(document) {\n    this.editing = true;\n    this.selectedDocument = document;\n    this.documentationForm.patchValue({\n      nom: document.nom,\n      description: document.description\n    });\n  }\n  // Méthode pour enregistrer les modifications\n  saveChanges() {\n    if (this.documentationForm.valid && this.selectedDocument) {\n      const updatedDocument = this.documentationForm.value;\n      updatedDocument.idDoc = this.selectedDocument.idDoc; // Assurez-vous de passer l'ID du document modifié\n      this.documentationService.updateDocument(updatedDocument).subscribe(response => {\n        console.log('Document mis à jour avec succès:', response);\n        this.editing = false; // Désactiver le mode édition après la mise à jour réussie\n        this.selectedDocument = null;\n        // Actualiser la liste des documents après la mise à jour\n        this.documentationService.getAllDocuments().subscribe(data => {\n          this.documents = data;\n        }, error => {\n          console.error('Erreur lors de la récupération des documents après la mise à jour:', error);\n        });\n      }, error => {\n        console.error('Erreur lors de la mise à jour du document:', error);\n        // Gérer l'erreur, par exemple, afficher un message d'erreur à l'utilisateur\n      });\n    } else {\n      console.error('Le formulaire n\\'est pas valide.');\n      // Gérer le cas où le formulaire n'est pas valide, par exemple, afficher un message à l'utilisateur\n    }\n  }\n  static #_ = this.ɵfac = function ModifierDocumentationComponent_Factory(t) {\n    return new (t || ModifierDocumentationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DocumentationService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifierDocumentationComponent,\n    selectors: [[\"app-modifier-documentation\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"click\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"nom\", \"placeholder\", \"Nom du document\"], [\"type\", \"text\", \"formControlName\", \"description\", \"placeholder\", \"Description du document\"], [\"type\", \"submit\"]],\n    template: function ModifierDocumentationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ModifierDocumentationComponent_div_0_Template, 7, 2, \"div\", 0)(1, ModifierDocumentationComponent_form_1_Template, 5, 1, \"form\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.documents);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.editing);\n      }\n    },\n    dependencies: [CommonModule, i3.NgForOf, i3.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","ReactiveFormsModule","CommonModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ModifierDocumentationComponent_div_0_Template_button_click_5_listener","restoredCtx","ɵɵrestoreView","_r4","document_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","editDocument","ɵɵadvance","ɵɵtextInterpolate","nom","description","ModifierDocumentationComponent_form_1_Template_form_ngSubmit_0_listener","_r6","ctx_r5","saveChanges","ɵɵelement","ɵɵproperty","ctx_r1","documentationForm","ModifierDocumentationComponent","constructor","formBuilder","documentationService","editing","ngOnInit","group","required","getAllDocuments","subscribe","data","documents","error","console","document","selectedDocument","patchValue","valid","updatedDocument","value","idDoc","updateDocument","response","log","_","ɵɵdirectiveInject","i1","FormBuilder","i2","DocumentationService","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ModifierDocumentationComponent_Template","rf","ctx","ɵɵtemplate","ModifierDocumentationComponent_div_0_Template","ModifierDocumentationComponent_form_1_Template","i3","NgForOf","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["C:\\PIDataCatalogDREAMIT\\FrontMetaData\\src\\app\\modifier-documentation\\modifier-documentation.component.ts","C:\\PIDataCatalogDREAMIT\\FrontMetaData\\src\\app\\modifier-documentation\\modifier-documentation.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DocumentationService } from '../core/services/documentation.service'; // Assurez-vous de corriger le chemin\r\nimport {   ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Documentation } from '../core/models/Documentation';\r\n@Component({\r\n  selector: 'app-modifier-documentation',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './modifier-documentation.component.html',\r\n  styleUrls: ['./modifier-documentation.component.scss']\r\n})\r\nexport class ModifierDocumentationComponent implements OnInit {\r\n  documents: Documentation[]; // Liste des documents\r\n  editing: boolean = false; // Indicateur de mode édition\r\n  documentationForm: FormGroup; // Formulaire de modification\r\n  selectedDocument: Documentation; // Document sélectionné pour modification\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private documentationService: DocumentationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // Initialisation du formulaire\r\n    this.documentationForm = this.formBuilder.group({\r\n      nom: ['', Validators.required],\r\n      description: ['', Validators.required]\r\n    });\r\n\r\n    // Récupération des documents depuis le service\r\n    this.documentationService.getAllDocuments().subscribe(\r\n      (data) => {\r\n        this.documents = data;\r\n      },\r\n      (error) => {\r\n        console.error('Erreur lors de la récupération des documents:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Méthode pour activer le mode édition\r\n  editDocument(document: Documentation): void {\r\n    this.editing = true;\r\n    this.selectedDocument = document;\r\n    this.documentationForm.patchValue({\r\n      nom: document.nom,\r\n      description: document.description\r\n    });\r\n  }\r\n\r\n  // Méthode pour enregistrer les modifications\r\n  saveChanges(): void {\r\n    if (this.documentationForm.valid && this.selectedDocument) {\r\n      const updatedDocument = this.documentationForm.value as Documentation;\r\n      updatedDocument.idDoc = this.selectedDocument.idDoc; // Assurez-vous de passer l'ID du document modifié\r\n      this.documentationService.updateDocument(updatedDocument).subscribe(\r\n        (response) => {\r\n          console.log('Document mis à jour avec succès:', response);\r\n          this.editing = false; // Désactiver le mode édition après la mise à jour réussie\r\n          this.selectedDocument = null;\r\n          // Actualiser la liste des documents après la mise à jour\r\n          this.documentationService.getAllDocuments().subscribe(\r\n            (data) => {\r\n              this.documents = data;\r\n            },\r\n            (error) => {\r\n              console.error('Erreur lors de la récupération des documents après la mise à jour:', error);\r\n            }\r\n          );\r\n        },\r\n        (error) => {\r\n          console.error('Erreur lors de la mise à jour du document:', error);\r\n          // Gérer l'erreur, par exemple, afficher un message d'erreur à l'utilisateur\r\n        }\r\n      );\r\n    } else {\r\n      console.error('Le formulaire n\\'est pas valide.');\r\n      // Gérer le cas où le formulaire n'est pas valide, par exemple, afficher un message à l'utilisateur\r\n    }\r\n  }\r\n}\r\n","<!-- Affichage des documents avec un bouton \"Modifier\" pour chaque document -->\r\n<div *ngFor=\"let document of documents\">\r\n    <p>{{ document.nom }}</p>\r\n    <p>{{ document.description }}</p>\r\n    <button (click)=\"editDocument(document)\">Modifier</button>\r\n  </div>\r\n  \r\n  <!-- Formulaire de modification -->\r\n  <form *ngIf=\"editing\" [formGroup]=\"documentationForm\" (ngSubmit)=\"saveChanges()\">\r\n    <input type=\"text\" formControlName=\"nom\" placeholder=\"Nom du document\">\r\n    <input type=\"text\" formControlName=\"description\" placeholder=\"Description du document\">\r\n    <button type=\"submit\">Enregistrer</button>\r\n  </form>\r\n  "],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;AAEnE,SAAWC,mBAAmB,QAAQ,gBAAgB;AACtD,SAASC,YAAY,QAAQ,iBAAiB;;;;;;;;ICH9CC,EAAA,CAAAC,cAAA,UAAwC;IACjCD,EAAA,CAAAE,MAAA,GAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACzBH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACjCH,EAAA,CAAAC,cAAA,gBAAyC;IAAjCD,EAAA,CAAAI,UAAA,mBAAAC,sEAAA;MAAA,MAAAC,WAAA,GAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAC,WAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAASZ,EAAA,CAAAa,WAAA,CAAAF,MAAA,CAAAG,YAAA,CAAAL,WAAA,CAAsB;IAAA,EAAC;IAACT,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAFvDH,EAAA,CAAAe,SAAA,GAAkB;IAAlBf,EAAA,CAAAgB,iBAAA,CAAAP,WAAA,CAAAQ,GAAA,CAAkB;IAClBjB,EAAA,CAAAe,SAAA,GAA0B;IAA1Bf,EAAA,CAAAgB,iBAAA,CAAAP,WAAA,CAAAS,WAAA,CAA0B;;;;;;IAK/BlB,EAAA,CAAAC,cAAA,cAAiF;IAA3BD,EAAA,CAAAI,UAAA,sBAAAe,wEAAA;MAAAnB,EAAA,CAAAO,aAAA,CAAAa,GAAA;MAAA,MAAAC,MAAA,GAAArB,EAAA,CAAAY,aAAA;MAAA,OAAYZ,EAAA,CAAAa,WAAA,CAAAQ,MAAA,CAAAC,WAAA,EAAa;IAAA,EAAC;IAC9EtB,EAAA,CAAAuB,SAAA,eAAuE;IAEvEvB,EAAA,CAAAC,cAAA,gBAAsB;IAAAD,EAAA,CAAAE,MAAA,kBAAW;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAHtBH,EAAA,CAAAwB,UAAA,cAAAC,MAAA,CAAAC,iBAAA,CAA+B;;;ADKvD,OAAM,MAAOC,8BAA8B;EAMzCC,YACUC,WAAwB,EACxBC,oBAA0C;IAD1C,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,oBAAoB,GAApBA,oBAAoB;IAN9B,KAAAC,OAAO,GAAY,KAAK,CAAC,CAAC;EAOvB;;EAEHC,QAAQA,CAAA;IACN;IACA,IAAI,CAACN,iBAAiB,GAAG,IAAI,CAACG,WAAW,CAACI,KAAK,CAAC;MAC9ChB,GAAG,EAAE,CAAC,EAAE,EAAEpB,UAAU,CAACqC,QAAQ,CAAC;MAC9BhB,WAAW,EAAE,CAAC,EAAE,EAAErB,UAAU,CAACqC,QAAQ;KACtC,CAAC;IAEF;IACA,IAAI,CAACJ,oBAAoB,CAACK,eAAe,EAAE,CAACC,SAAS,CAClDC,IAAI,IAAI;MACP,IAAI,CAACC,SAAS,GAAGD,IAAI;IACvB,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACvE,CAAC,CACF;EACH;EAEA;EACAzB,YAAYA,CAAC2B,QAAuB;IAClC,IAAI,CAACV,OAAO,GAAG,IAAI;IACnB,IAAI,CAACW,gBAAgB,GAAGD,QAAQ;IAChC,IAAI,CAACf,iBAAiB,CAACiB,UAAU,CAAC;MAChC1B,GAAG,EAAEwB,QAAQ,CAACxB,GAAG;MACjBC,WAAW,EAAEuB,QAAQ,CAACvB;KACvB,CAAC;EACJ;EAEA;EACAI,WAAWA,CAAA;IACT,IAAI,IAAI,CAACI,iBAAiB,CAACkB,KAAK,IAAI,IAAI,CAACF,gBAAgB,EAAE;MACzD,MAAMG,eAAe,GAAG,IAAI,CAACnB,iBAAiB,CAACoB,KAAsB;MACrED,eAAe,CAACE,KAAK,GAAG,IAAI,CAACL,gBAAgB,CAACK,KAAK,CAAC,CAAC;MACrD,IAAI,CAACjB,oBAAoB,CAACkB,cAAc,CAACH,eAAe,CAAC,CAACT,SAAS,CAChEa,QAAQ,IAAI;QACXT,OAAO,CAACU,GAAG,CAAC,kCAAkC,EAAED,QAAQ,CAAC;QACzD,IAAI,CAAClB,OAAO,GAAG,KAAK,CAAC,CAAC;QACtB,IAAI,CAACW,gBAAgB,GAAG,IAAI;QAC5B;QACA,IAAI,CAACZ,oBAAoB,CAACK,eAAe,EAAE,CAACC,SAAS,CAClDC,IAAI,IAAI;UACP,IAAI,CAACC,SAAS,GAAGD,IAAI;QACvB,CAAC,EACAE,KAAK,IAAI;UACRC,OAAO,CAACD,KAAK,CAAC,oEAAoE,EAAEA,KAAK,CAAC;QAC5F,CAAC,CACF;MACH,CAAC,EACAA,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;QAClE;MACF,CAAC,CACF;KACF,MAAM;MACLC,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAC;MACjD;;EAEJ;EAAC,QAAAY,CAAA,G;qBApEUxB,8BAA8B,EAAA3B,EAAA,CAAAoD,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAtD,EAAA,CAAAoD,iBAAA,CAAAG,EAAA,CAAAC,oBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAA9B9B,8BAA8B;IAAA+B,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAA5D,EAAA,CAAA6D,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ3CnE,EAAA,CAAAqE,UAAA,IAAAC,6CAAA,iBAIQ,IAAAC,8CAAA;;;QAJkBvE,EAAA,CAAAwB,UAAA,YAAA4C,GAAA,CAAA9B,SAAA,CAAY;QAO7BtC,EAAA,CAAAe,SAAA,GAAa;QAAbf,EAAA,CAAAwB,UAAA,SAAA4C,GAAA,CAAArC,OAAA,CAAa;;;mBDCVhC,YAAY,EAAAyE,EAAA,CAAAC,OAAA,EAAAD,EAAA,CAAAE,IAAA,EAAE5E,mBAAmB,EAAAuD,EAAA,CAAAsB,aAAA,EAAAtB,EAAA,CAAAuB,oBAAA,EAAAvB,EAAA,CAAAwB,eAAA,EAAAxB,EAAA,CAAAyB,oBAAA,EAAAzB,EAAA,CAAA0B,kBAAA,EAAA1B,EAAA,CAAA2B,eAAA;IAAAC,MAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}