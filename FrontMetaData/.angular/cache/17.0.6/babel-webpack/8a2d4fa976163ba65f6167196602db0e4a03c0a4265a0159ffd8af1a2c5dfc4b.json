{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FolderServiceService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8082/PIDataCatalog/api';\n  }\n  getAllFolders() {\n    return this.http.get(this.baseUrl);\n  }\n  getFolderById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  addFolder(folderData) {\n    return this.http.post(`${this.baseUrl}/createFolder`, folderData);\n  }\n  deleteFolder(idFolder) {\n    return this.http.delete(`${this.baseUrl}/folders/deleteFolder/${idFolder}`);\n  }\n  static #_ = this.ɵfac = function FolderServiceService_Factory(t) {\n    return new (t || FolderServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FolderServiceService,\n    factory: FolderServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["FolderServiceService","constructor","http","baseUrl","getAllFolders","get","getFolderById","id","addFolder","folderData","post","deleteFolder","idFolder","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\PIDataCatalogDREAMIT\\FrontMetaData\\src\\app\\pages\\catalogs\\metadata-imports\\service\\folder-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FolderServiceService {\n\n  private baseUrl = 'http://localhost:8082/PIDataCatalog/api';\n\n  constructor(private http: HttpClient) { }\n\n  getAllFolders(): Observable<any> {\n    return this.http.get(this.baseUrl);\n  }\n\n  getFolderById(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  addFolder(folderData: FormData): Observable<any> {\n    return this.http.post(`${this.baseUrl}/createFolder`, folderData);\n  }\n\n  deleteFolder(idFolder: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/folders/deleteFolder/${idFolder}`);\n  }\n  \n  // Ajoutez d'autres méthodes pour mettre à jour les dossiers selon vos besoins\n}"],"mappings":";;AASA,OAAM,MAAOA,oBAAoB;EAI/BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,yCAAyC;EAEnB;EAExCC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,OAAO,CAAC;EACpC;EAEAG,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,IAAII,EAAE,EAAE,CAAC;EAC/C;EAEAC,SAASA,CAACC,UAAoB;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,OAAO,eAAe,EAAEM,UAAU,CAAC;EACnE;EAEAE,YAAYA,CAACC,QAAgB;IAC3B,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACV,OAAO,yBAAyBS,QAAQ,EAAE,CAAC;EAC7E;EAAC,QAAAE,CAAA,G;qBApBUd,oBAAoB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAApBnB,oBAAoB;IAAAoB,OAAA,EAApBpB,oBAAoB,CAAAqB,IAAA;IAAAC,UAAA,EAFnB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}